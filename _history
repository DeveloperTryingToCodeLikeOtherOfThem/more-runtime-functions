{"entries":[{"timestamp":1758482316898,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":234,"length1":80,"diffs":[[1,"        \"programcontrol.cpp\"\n"]]}]},{"type":"added","filename":"shims.d.ts","value":"// Auto-generated. Do not edit.\ndeclare namespace programControls {\n\n    /**\n     * Used internally\n     */\n    //% flags.defl=16 shim=programControls::internalOnEvent\n    function internalOnEvent(src: int32, value: int32, handler: () => void, flags?: int32): void;\n}\n\n// Auto-generated. Do not edit. Really.\n"},{"type":"added","filename":"programcontrol.ts","value":"type Program = () => void\r\n\r\nnamespace __program {\r\n    export class Bug {\r\n        bug: Bug \r\n       protected outOfProgram: () => void \r\n       protected isOutOfContext: () => boolean \r\n        program: Program \r\n\r\n        constructor() {\r\n            this.bug = this \r\n            this.program = () => control.EventContext.onStats(\"Programming...\")\r\n        }\r\n\r\n       protected throwError(error: string) {\r\n            throw error\r\n        }\r\n\r\n       protected isOutOfProgramming(on: boolean, line: string) {\r\n            if(on) {\r\n                throw \"Error code\" + line\r\n            } else {\r\n                // Everything seems fine!\r\n            }\r\n        }\r\n\r\n       protected handlerControls () {\r\n            if(this.outOfProgram) {\r\n                this.throwError(\"\")\r\n            }\r\n        }\r\n    }\r\n\r\n    let _bug: Bug\r\n    export function outOfProgram() {\r\n        _bug = new Bug()\r\n        if(_bug) {\r\n            _bug.\r\n        }\r\n    }\r\n}"}]},{"timestamp":1758482902107,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":286,"length1":50,"diffs":[[1,"        \"programcontrol.ts\"\n"]]}]},{"type":"edited","filename":"programcontrol.ts","patch":[{"start1":27,"length1":24,"diffs":[[1,""]]},{"start1":52,"length1":18,"diffs":[[1,"    export class Bug {\r\n"]]},{"start1":366,"length1":37,"diffs":[[1,"       protected throwError(error: string) {\r\n"]]},{"start1":925,"length1":105,"diffs":[[1,"            _bug.\r\n"]]},{"start1":962,"length1":369,"diffs":[[1,""]]}]},{"type":"added","filename":"onStart.ts","value":"namespace programControls {\n    export function onStart(a: () => void) {\n        a()\n    }\n\n    export declare function isRunning(): void\n}"}]},{"timestamp":1758483518860,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"onStart.ts","patch":[{"start1":92,"length1":42,"diffs":[[1,"    export declare function isRunning(): void\n"]]}]}]},{"timestamp":1758483523867,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":343,"length1":44,"diffs":[[1,""]]}]},{"type":"edited","filename":"onStart.ts","patch":[{"start1":91,"length1":41,"diffs":[[1,"\n"]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"},{"type":"added","filename":"main.ts","value":" "}]}],"snapshots":[{"timestamp":1758482316897,"editorVersion":"2.0.56","text":{"README.md":" ","assets.json":"","pxtcore.cpp":"void registerWithDal(int id, int event, Action a, int flags = 16); // EVENT_LISTENER_DEFAULT_FLAGS\nvoid runInParallel(Action a);\nvoid runForever(Action a);\nvoid waitForEvent(int id, int event);","programcontrol.d.ts":"declare namespace programControls {\n    //% shim=programControls::internalOnEvent\n     function internalOnEvent(src: int32, value: int32, handler: () => void, flags?: int32): void\n}","programcontrol.cpp":"\n    namespace programControls {\n             /**\n    * Used internally\n    */\n    //%\n           void internalOnEvent(int src, int value, Action handler, int flags = 16) {\n        registerWithDal(src, value, handler, flags);\n       }\n    }","pxt.json":"{\n    \"name\": \"I made core runtime functions\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"README.md\",\n        \"assets.json\",\n        \"pxtcore.cpp\",\n        \"programcontrol.d.ts\",\n        \"programcontrol.cpp\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v2.0.56\",\n        \"tag\": \"v2.0.56\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/2e47d3464cf6ea715ec6e630834bbe15bc2f6feb\",\n        \"target\": \"2.0.56\",\n        \"pxt\": \"11.3.59\"\n    },\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[],"lastSaveTime":1758483648398}